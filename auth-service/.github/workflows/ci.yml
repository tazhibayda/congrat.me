name: CI

on:
  push:
    branches: [ main ]
  pull_request:
  workflow_dispatch:

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

env:
  GO_VERSION: "1.23.x"
  IMAGE_NAME: ghcr.io/${{ github.repository }}/auth-service

jobs:
  lint:
    name: Lint (golangci-lint)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}

      - name: Install golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.59
          args: >
            --timeout=5m
            ./...

  unit:
    name: Unit tests
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}

      - name: Run unit tests (race + coverage)
        run: |
          go test -race -covermode=atomic -coverprofile=coverage.out ./...
          go tool cover -func=coverage.out | tail -n 1
      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-unit
          path: coverage.out

  integration:
    name: Integration tests (Mongo/Redis/RabbitMQ)
    runs-on: ubuntu-latest
    needs: unit
    services:
      mongo:
        image: mongo:6
        ports: [ "27017:27017" ]
        options: >-
          --health-cmd="mongosh --eval 'db.runCommand({ ping: 1 })'"
          --health-interval=5s --health-timeout=5s --health-retries=12
      redis:
        image: redis:7
        ports: [ "6379:6379" ]
        options: >-
          --health-cmd="redis-cli ping"
          --health-interval=5s --health-timeout=5s --health-retries=12
      rabbit:
        image: rabbitmq:3-management
        ports: [ "5672:5672", "15672:15672" ]
        options: >-
          --health-cmd="rabbitmq-diagnostics -q ping"
          --health-interval=5s --health-timeout=5s --health-retries=12
    env:
      MONGO_URI: mongodb://localhost:27017
      MONGO_DB: auth_db_test
      REDIS_ADDR: localhost:6379
      RABBIT_URL: amqp://guest:guest@localhost:5672/
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}

      # Если у тебя есть интеграционные тесты, помечай их build-tag'ом `integration`.
      # Либо просто прогоняй ./... (ниже показан пример с тегом).
      - name: Run integration tests
        run: |
          go test -race -tags=integration -v ./... -count=1

  docker:
    name: Build & Push Docker image
    runs-on: ubuntu-latest
    needs: [integration]
    if: github.ref == 'refs/heads/main'
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU (optional multi-arch)
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract short sha
        id: vars
        run: echo "SHORT_SHA=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT

      - name: Build & push
        uses: docker/build-push-action@v6
        with:
          push: true
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          tags: |
            ${{ env.IMAGE_NAME }}:sha-${{ steps.vars.outputs.SHORT_SHA }}
            ${{ env.IMAGE_NAME }}:latest
